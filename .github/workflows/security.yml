name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install
          gem install bundler-audit

      - name: Ruby Dependency Audit
        run: |
          bundle audit --update
          bundle audit --format json --output bundler-audit.json
        continue-on-error: true

      - name: Swift Package Audit
        run: |
          # Check for known vulnerabilities in Swift packages
          swift package show-dependencies --format json > swift-deps.json
          # Note: Swift doesn't have built-in vulnerability scanning yet
          # This is a placeholder for future security tools
        continue-on-error: true

      - name: Upload Security Reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            bundler-audit.json
            swift-deps.json
          retention-days: 30

  code-analysis:
    name: Static Code Analysis
    runs-on: macos-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.2"

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: swift
          config-file: ./.github/codeql/codeql-config.yml

      - name: Build for CodeQL
        run: |
          xcodebuild clean build \
            -workspace "AI-Mixtapes.xcworkspace" \
            -scheme "AI Mixtapes" \
            -configuration Debug \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:swift"

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  security-summary:
    name: Security Summary
    needs: [dependency-scan, code-analysis, secrets-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Security Reports
        uses: actions/download-artifact@v3
        with:
          name: security-reports
        continue-on-error: true

      - name: Generate Security Summary
        run: |
          echo "# ðŸ”’ Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "## Scan Results" >> security-summary.md
          echo "- **Dependency Scan**: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- **Code Analysis**: ${{ needs.code-analysis.result }}" >> security-summary.md
          echo "- **Secrets Scan**: ${{ needs.secrets-scan.result }}" >> security-summary.md
          echo "" >> security-summary.md
          echo "Generated on: $(date)" >> security-summary.md

      - name: Comment PR with Security Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });